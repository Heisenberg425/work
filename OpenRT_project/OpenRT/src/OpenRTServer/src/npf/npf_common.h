/*********************************************************************************************************
**
**                                    中国软件开源组织
**
**                                   嵌入式实时操作系统
**
**                                SylixOS(TM)  LW : long wing
**
**                               Copyright All Rights Reserved
**
**--------------文件信息--------------------------------------------------------------------------------
**
** 文   件   名: npf_common.h
**
** 创   建   人: Shen.WenJun (沈文君)
**
** 文件创建日期: 2018 年 7 月 24 日
**
** 描        述: npf信息头文件
*********************************************************************************************************/

#ifndef __NPF_COMMON_H
#define __NPF_COMMON_H

#include <SylixOS.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "libnpf_config.h"
#include "msgcomm.h"
#include "common.h"
#include "database/database_common.h"

/*
 * 操作类型
 */
#define NPFRULE_ADD                    "add"                            /*  添加                        */
#define NPFRULE_DEL                    "del"                            /*  删除                        */
#define NPFRULE_UPADTE                 "update"                         /*  更新                        */


/*********************************************************************************************************
** 函数名称: npfTableCreate
** 函数功能: 创建NPF规则表
** 输    入: NONE
** 输    出: NONE
** 返    回: ERROR_CODE
*********************************************************************************************************/
INT  npfTableCreate (VOID);

/*********************************************************************************************************
** 函数名称: insertDBNpfRule
** 函数功能: 插入NPF规则
** 输    入: pNpfData  前端传入的参数
** 输    出: NONE
** 返    回: NONE
*********************************************************************************************************/
VOID insertDBNpfRule (__PNPF_HANDLE  pNpfData);

/*********************************************************************************************************
** 函数名称: delDBNpfRule
** 函数功能: 删除NPF规则
** 输    入: pNpfData  前端传入的参数
** 输    出: NONE
** 返    回: NONE
*********************************************************************************************************/
VOID delDBNpfRule (__PNPF_HANDLE  pNpfData);

/*********************************************************************************************************
** 函数名称: updateDBNpfRule
** 函数功能: 更新npf规则
** 输    入: pNpfData  前端传入的数值
** 输    出: NONE
** 返    回: NONE
*********************************************************************************************************/
VOID updateDBNpfRule (__PNPF_HANDLE  pNpfData);

/*********************************************************************************************************
** 函数名称: selectDBNpfRule
** 函数功能: 获取NPF规则
** 输    入: pNpfData     前端传入的数据
**           piRecordNum  数据条目
**           cWhere       查询条件
** 输    出: piRecordNum  查询到的数据条目
** 返    回: 查询的结果数组
*********************************************************************************************************/
__PNPF_HANDLE selectDBNpfRule (__PNPF_HANDLE  pNpfData, INT  *piRecordNum, PCHAR  cWhere);

/*********************************************************************************************************
** 函数名称: getDBNpfRule
** 函数功能: 获取NPF规则
** 输    入: pNpfData     前端传入的数据
**           piRecordNum  数据条目
**           cWhere       查询条件
** 输    出: piRecordNum  查询到的数据条目
** 返    回: 查询的结果数组
*********************************************************************************************************/
__PNPF_HANDLE getDBNpfRule (__PNPF_HANDLE  pNpfData, INT  *piRecordNum, PCHAR  cWhere);

/*********************************************************************************************************
** 函数名称: doCfgNpfRule
** 函数功能: 配置NPF规则
** 输    入: pNpfMsgBoby  前端传入的数据
** 输    出: NONE
** 返    回: ERROR_NONE or PX_ERROR
*********************************************************************************************************/
INT doCfgNpfRule (__PNPF_HANDLE  pNpfMsgBoby);

/*********************************************************************************************************
** 函数名称: npfRecovery
** 功能描述: npf配置恢复
** 输　入  : none
** 输　出  : none
** 返　回  : INT 执行结果
*********************************************************************************************************/
INT npfRecovery (VOID);

/*********************************************************************************************************
** 函数名称: npfHandleEntry
** 函数功能: npf配置操作入口
** 输    入: iCommand 服务命令
**           pArgBuf  处理内容
** 输    出:
** 返    回:
*********************************************************************************************************/
VOID npfHandleEntry (INT  iCommand, PVOID  pArgBuf);

#endif
